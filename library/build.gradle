apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

def libraryVersion = "git describe --abbrev=0 --tags".execute().text.trim()
def libraryFullVersion = "git describe --always --tags".execute().text.trim()

group = 'io.skygear'
version = libraryVersion

def bintrayUser = System.getenv('BINTRAY_USER')
def bintrayApiKey = System.getenv('BINTRAY_API_KEY')

if (project.rootProject.file('local.properties').exists()) {
    Properties localProperties = new Properties()
    localProperties.load(project.rootProject.file('local.properties').newDataInputStream())

    bintrayUser = localProperties.getProperty('bintrayUser', bintrayUser)
    bintrayApiKey = localProperties.getProperty('bintrayApiKey', bintrayApiKey)
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName libraryFullVersion

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        textReport true
        textOutput 'stdout'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:support-v13:25.3.1'
    compile 'com.android.support:support-annotations:25.3.1'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.android.volley:volley:1.0.0'
}

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

task generateJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

afterEvaluate {
    generateJavadocs.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    })
}

task generateJavadocsJar(type: Jar) {
    from generateJavadocs.destinationDir
    classifier 'javadoc'
}

generateJavadocsJar.dependsOn generateJavadocs
artifacts {
    archives generateJavadocsJar
    archives generateSourcesJar
}

bintray {
    user = bintrayUser
    key = bintrayApiKey
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'VolleyEx'
        userOrg = 'skygeario'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/SkygearIO/VolleyEx.git'
        publish = true
        version {
            name = libraryFullVersion
            desc = "Expension pack for Android Vollery Framework"
            released  = new Date()
            vcsTag = libraryVersion
        }
    }
}
